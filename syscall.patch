diff --git a/arch/x86/entry/syscalls/syscall_64.tbl b/arch/x86/entry/syscalls/syscall_64.tbl
index 78847b32e137..5891ec9bd847 100644
--- a/arch/x86/entry/syscalls/syscall_64.tbl
+++ b/arch/x86/entry/syscalls/syscall_64.tbl
@@ -403,3 +403,4 @@
 545	x32	execveat		compat_sys_execveat
 546	x32	preadv2			compat_sys_preadv64v2
 547	x32	pwritev2		compat_sys_pwritev64v2
+548 common s2_encrypt      sys_s2_encrypt
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index b951a87da987..256ef1cb79cd 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -552,6 +552,9 @@ asmlinkage long sys_utimensat_time32(unsigned int dfd,
 				const char __user *filename,
 				struct old_timespec32 __user *t, int flags);
 
+/* kernel/s2_encrypt.c */
+asmlinkage int sys_s2_encrypt(char* msg, unsigned short encrypt);
+
 /* kernel/acct.c */
 asmlinkage long sys_acct(const char __user *name);
 
diff --git a/kernel/Makefile b/kernel/Makefile
index f3218bc5ec69..9a7f9146df1f 100644
--- a/kernel/Makefile
+++ b/kernel/Makefile
@@ -10,7 +10,8 @@ obj-y     = fork.o exec_domain.o panic.o \
 	    extable.o params.o \
 	    kthread.o sys_ni.o nsproxy.o \
 	    notifier.o ksysfs.o cred.o reboot.o \
-	    async.o range.o smpboot.o ucount.o
+	    async.o range.o smpboot.o ucount.o \
+		s2_encrypt.o
 
 obj-$(CONFIG_MODULES) += kmod.o
 obj-$(CONFIG_MULTIUSER) += groups.o
diff --git a/kernel/s2_encrypt.c b/kernel/s2_encrypt.c
new file mode 100644
index 000000000000..7f34ddbeceac
--- /dev/null
+++ b/kernel/s2_encrypt.c
@@ -0,0 +1,75 @@
+#include <linux/mm.h>
+#include <linux/socket.h>
+#include <linux/file.h>
+#include <linux/net.h>
+#include <linux/interrupt.h>
+#include <linux/thread_info.h>
+#include <linux/rcupdate.h>
+#include <linux/netdevice.h>
+#include <linux/proc_fs.h>
+#include <linux/seq_file.h>
+#include <linux/mutex.h>
+#include <linux/if_bridge.h>
+#include <linux/if_frad.h>
+#include <linux/if_vlan.h>
+#include <linux/ptp_classify.h>
+#include <linux/init.h>
+#include <linux/poll.h>
+#include <linux/cache.h>
+#include <linux/module.h>
+#include <linux/highmem.h>
+#include <linux/mount.h>
+#include <linux/pseudo_fs.h>
+#include <linux/security.h>
+#include <linux/syscalls.h>
+#include <linux/compat.h>
+#include <linux/kmod.h>
+#include <linux/audit.h>
+#include <linux/wireless.h>
+#include <linux/nsproxy.h>
+#include <linux/magic.h>
+#include <linux/slab.h>
+#include <linux/xattr.h>
+#include <linux/nospec.h>
+#include <linux/indirect_call_wrapper.h>
+
+#include <linux/uaccess.h>
+#include <asm/unistd.h>
+
+#include <net/compat.h>
+#include <net/wext.h>
+#include <net/cls_cgroup.h>
+
+#include <net/sock.h>
+#include <linux/netfilter.h>
+
+#include <linux/if_tun.h>
+#include <linux/ipv6_route.h>
+#include <linux/route.h>
+#include <linux/termios.h>
+#include <linux/sockios.h>
+#include <net/busy_poll.h>
+#include <linux/errqueue.h>
+
+asmlinkage int sys_s2_encrypt(char* msg, unsigned short encrypt) 
+{
+
+    unsigned short i;
+    if (encrypt < 1 || encrypt > 5)
+        return EINVAL;
+
+    i = 0;
+    while (msg[i] != '\0') {
+
+        msg[i] = msg[i] + encrypt;
+        i++;
+    }
+
+    printk(KERN_INFO "sys_s2_encrypt called. Resulting string: \"%s\"\n", msg);
+    return 0;
+}
+
+SYSCALL_DEFINE2(s2_encrypt, char*, msg, unsigned short, encrypt)
+{
+    return sys_s2_encrypt(msg, encrypt);
+}
